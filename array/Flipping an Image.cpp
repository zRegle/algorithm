/**
 * Leetcode 832. 翻转图像
 * 给定一个二进制矩阵 A，我们想先水平翻转图像，然后反转图像并返回结果。
 * 水平翻转图片就是将图片的每一行都进行翻转，即逆序。例如，水平翻转 [1, 1, 0] 的结果是 [0, 1, 1]。
 * 反转图片的意思是图片中的 0 全部被 1 替换， 1 全部被 0 替换。例如，反转 [0, 1, 1] 的结果是 [1, 0, 0]。
 * 
 * 示例 1:
 * 输入: [[1,1,0],[1,0,1],[0,0,0]]
 * 输出: [[1,0,0],[0,1,0],[1,1,1]]
 * 解释: 首先翻转每一行: [[0,1,1],[1,0,1],[0,0,0]]；
 *      然后反转图片: [[1,0,0],[0,1,0],[1,1,1]]
 */
#include <vector>
using std::vector;

class Solution {
public:
    vector<vector<int>> flipAndInvertImage(vector<vector<int>>& A) {
        int c = A[0].size();
        for (auto& r : A) {
            /* 对于偶数数组遍历一半元素，对于奇数数组遍历一半 + 1元素 */
            for (int j = 0; j < (c + 1) / 2; j++) {
                int tmp = r[j] ^ 1; /* 这里也可以用逻辑取反 ! */
                r[j] = r[c-j-1] ^ 1;
                r[c-j-1] = tmp;
            }
        }
        return A;
    }
};